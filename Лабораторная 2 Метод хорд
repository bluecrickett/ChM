//Лабораторная 2;  Метод хорд
//Вариант 9 (x^3-2=ln(x+2)); Отрезок [1;2]
#include <iostream>
#include <cmath>
#define _USE_MATH_DEFINES
using namespace std;

int main(){
    int k=0;
    double a=0.0, b=0.0, c=0.0, ya=0.0, yb=0.0, x=0.0;
    cout << "Найдем корень уравнения x^3-2=ln(x+2) с помощью метода хорд\nВведите начало отрезка: ";
    cin >> a;
    cout << "Введите конец отрезка: ";
    cin >> b;
    cout << "Введите точность: ";
    cin >> c;
    cout << "Проверка на наличие корней на концах заданного отрезка:\n";
    ya=pow(a,3)-2-log(a+2);
    if (ya == 0.0) {
        cout << "Корень находится на конце отрезка в точке a и равен " << a; exit;
    }
    else {
        cout << "Значение функции на конце отрезка в точке а равно " << ya << ", значит не является корнем уравнения\n";
    }
    yb = pow(b,3)-2-log(b+2);
    if (yb == 0.0) {
        cout << "Корень находится на конце отрезка в точке b и равен " << b; exit;
    }
    else{
        cout << "Значение функции на конце отрезка в точке b равно " << yb << ", значит не является корнем уравнения\n";
    }
    cout << "Проверим, выполняется ли условие F(a)*F(b)<0: \n";
    if (ya*yb<0){
        cout << "F(a)*F(b) = " << ya*yb << ", значит корень находится в пределах заданного отрезка\n";
        while (true){
            k++;
            x = a - (pow(a,3)-2-log(a+2))/((pow(b,3)-2-log(b+2))-(pow(a,3)-2-log(a+2)));
            if ((pow(a,3)-2-log(a+2))*(pow(x,3)-2-log(x+2))<0){
                b = x;
            }
            else{
                a = x;
            }
            if ((pow((x-c),3)-2-log(x-c+2))*(pow((x+c),3)-2-log(x+c+2))<0){
                cout << "Корень уравнения: " << x << "\n";
                cout << "Количество итераций: " << k;
                break;
            }
        }
    }
    else{
        cout << "Корень не принадлежит заданному отрезку"; 
    }
    return 0;
}
